---
import SkillsPills from '@components/about/SkillsPills.astro';

const {
  description: _description,
  totalYears: _totalYears,
  nationality: _nationality,
  iLiveIn: _iLiveIn,
  skills: _skills
} = Astro.props as {
  description?: string;
  totalYears?: number;
  nationality?: string;
  iLiveIn?: string;
  skills?: string[];
};

const description: string = _description ?? '';
const totalYears: number = _totalYears ?? 0;
const nationality: string = _nationality ?? '';
const iLiveIn: string = _iLiveIn ?? '';
const skills: string[] = Array.isArray(_skills) ? _skills : [];

/* ------------------ Helpers para país/emoji ------------------ */
function extractCountry(input?: string): string {
  if (!input) return '';
  let s = String(input).trim();
  if (s.includes(',')) s = s.split(',').pop() ?? s;
  s = s.replace(/\(.+?\)/g, '').trim();
  return s;
}
function removeDiacritics(s: string): string {
  try { return s.normalize('NFD').replace(/[\u0300-\u036f]/g, ''); } catch { return s; }
}
const rawNameToIso: Record<string, string> = {
  'Colombia':'CO','España':'ES','Spain':'ES','Mexico':'MX','México':'MX',
  'United States':'US','USA':'US','United Kingdom':'GB','UK':'GB','England':'GB',
  'Germany':'DE','France':'FR','Italy':'IT','Portugal':'PT','Brazil':'BR','Brasil':'BR',
  'Argentina':'AR','Chile':'CL','Peru':'PE','Perú':'PE','Netherlands':'NL','Belgium':'BE',
  'Ireland':'IE','Australia':'AU','Canada':'CA','New Zealand':'NZ'
};
const nameToIso: Record<string,string> = {};
Object.entries(rawNameToIso).forEach(([name,iso]) => {
  nameToIso[removeDiacritics(name).toLowerCase()] = iso;
});
function isoToFlagEmoji(iso?: string): string {
  if (!iso || iso.length !== 2) return '🌍';
  const OFFSET = 0x1F1E6;
  const chars = iso.toUpperCase().split('').map(ch => {
    const code = ch.charCodeAt(0);
    if (code >= 65 && code <= 90) return OFFSET + (code - 65);
    return NaN;
  }).filter(n => !Number.isNaN(n)) as number[];
  if (chars.length !== 2) return '🌍';
  return String.fromCodePoint(chars[0], chars[1]);
}
function countryEmojiFromText(text?: string): string {
  const countryRaw = extractCountry(text);
  if (!countryRaw) return '🌍';
  const key = removeDiacritics(countryRaw).toLowerCase();
  let iso = nameToIso[key];
  if (!iso && key.includes(' ')) {
    const parts = key.split(/\s+/);
    iso = nameToIso[parts[parts.length - 1]] ?? nameToIso[parts[0]];
  }
  return iso ? isoToFlagEmoji(iso) : '🌍';
}
const natCountry: string = extractCountry(nationality);
const natEmoji: string = countryEmojiFromText(nationality);
const liveCountry: string = extractCountry(iLiveIn);
const liveEmoji: string = countryEmojiFromText(iLiveIn);
const displayNat: string = natCountry || nationality || 'N/A';
const displayLive: string = liveCountry || iLiveIn || 'N/A';
---

<article class="w-full max-w-6xl mx-auto my-2 px-4">
  <div class="bg-gradient-to-br from-white/30 to-sky-50/10 shadow-xs rounded-2xl p-4 md:p-6 border border-sky-100">
    
    <!-- Experiencia, Origen y Ubicación -->
    <div class="flex flex-col md:flex-row md:items-center justify-between gap-4 mb-6">
      
      <!-- Experiencia -->
      <div class="w-full md:w-auto flex justify-center md:justify-start">
        <div class="flex items-center gap-2 bg-sky-50/10 rounded-full px-3 py-2 shadow-sm border border-sky-200 w-full md:w-auto justify-center">
          <span class="text-md" aria-hidden>🚀</span>
          <div class="text-center">
            <div class="text-md md:text-lg font-bold text-sky-600 leading-tight">{totalYears}+</div>
            <div class="text-xs text-gray-500 font-medium whitespace-nowrap">años de experiencia</div>
          </div>
        </div>
      </div>

      <!-- Origen y ubicación -->
      <div class="flex flex-col sm:flex-row items-center justify-center gap-2 sm:gap-4 w-full md:w-auto">
        
        <!-- Origen -->
        <div class="flex items-center gap-2 bg-sky-50/10 rounded-full px-3 py-2 shadow-sm border border-sky-200 w-full sm:w-auto justify-center">
          <span class="text-base" aria-hidden>{natEmoji}</span>
          <div class="text-left">
            <div class="text-xs text-gray-500 font-medium">Origen</div>
            <div class="text-sm font-semibold text-sky-900 leading-tight" title={displayNat}>{displayNat}</div>
          </div>
        </div>

        <!-- Flecha -->
        <div class="hidden sm:block">
          <svg class="w-4 h-4 text-sky-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6" />
          </svg>
        </div>

        <!-- Ubicación -->
        <div class="flex items-center gap-2 bg-sky-50/10 rounded-full px-3 py-2 shadow-sm border border-sky-200 w-full sm:w-auto justify-center">
          <span class="text-base" aria-hidden>{liveEmoji}</span>
          <div class="text-left">
            <div class="text-xs text-gray-500 font-medium">Ubicación</div>
            <div class="text-sm font-semibold text-sky-900 leading-tight" title={displayLive}>{displayLive}</div>
          </div>
        </div>

      </div>
    </div>
    
    <!-- Estado disponible -->
    <div class="flex justify-center mb-6">
      <div class="flex items-center gap-1 bg-green-50 text-green-700 rounded-full px-2 py-1 border border-green-200">
        <div class="w-2 h-2 bg-green-400 rounded-full animate-pulse"></div>
        <span class="text-xs font-medium">Disponible para proyectos</span>
      </div>
    </div>

    <!-- Separador -->
    <div class="w-full  h-px bg-gradient-to-r from-transparent via-sky-300 to-transparent my-6"></div>

    <!-- Descripción -->
    <div class="prose prose-sm prose-gray max-w-none mb-6">
      <p class="text-gray-700 leading-relaxed text-base font-light">
        {description}
      </p>
    </div>

    <!-- Skills -->
    <div class="bg-white/10 rounded-xl p-4 border border-sky-100/50">
      <SkillsPills skills={skills ?? []} />
    </div>
  </div>
</article>
